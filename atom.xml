<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chaierss&#39;s Blog</title>
  
  
  <link href="https://www.chaierss.top/atom.xml" rel="self"/>
  
  <link href="https://www.chaierss.top/"/>
  <updated>2022-12-01T06:07:38.400Z</updated>
  <id>https://www.chaierss.top/</id>
  
  <author>
    <name>Chaierss</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>操作系统页面置换详解</title>
    <link href="https://www.chaierss.top/posts/1f61ca53.html"/>
    <id>https://www.chaierss.top/posts/1f61ca53.html</id>
    <published>2024-09-30T07:40:36.578Z</published>
    <updated>2022-12-01T06:07:38.400Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title=" 前言 "></a><font color="#798ba9"> 前言 </font></h2><p>一些常见的页面置换算法，可谓简单明了。</p><span id="more"></span><h2 id="一-FIFO-先进先出"><a href="#一-FIFO-先进先出" class="headerlink" title=" 一.FIFO(先进先出) "></a><font color="#798ba9"> 一.FIFO(先进先出) </font></h2><p>优先淘汰最早进入内存的页面</p><p><br></p><h2 id="二-OPT-最佳置换算法"><a href="#二-OPT-最佳置换算法" class="headerlink" title=" 二.OPT(最佳置换算法) "></a><font color="#798ba9"> 二.OPT(最佳置换算法) </font></h2><p>淘汰以后不会使用的页面</p><blockquote><p>置换页往后数，最远的那个淘汰</p></blockquote><p><br></p><h2 id="三-LRU-最近最少使用算法"><a href="#三-LRU-最近最少使用算法" class="headerlink" title=" 三.LRU(最近最少使用算法) "></a><font color="#798ba9"> 三.LRU(最近最少使用算法) </font></h2><p>淘汰最近没有使用的页面</p><blockquote><p>置换页往前数，最远的那个淘汰</p></blockquote><p><br></p><h2 id="四-注意点"><a href="#四-注意点" class="headerlink" title=" 四.注意点 "></a><font color="#798ba9"> 四.注意点 </font></h2><p>缺页次数 和 页面置换次数 </p><blockquote><p>缺页次数 = 页面置换次数 + 前几次缺页数</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot; 前言 &quot;&gt;&lt;/a&gt;&lt;font color=&quot;#798ba9&quot;&gt; 前言 &lt;/font&gt;&lt;/h2&gt;&lt;p&gt;一些常见的页面置换算法，可谓简单明了。&lt;/p&gt;</summary>
    
    
    
    <category term="知识点" scheme="https://www.chaierss.top/categories/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
    <category term="操作系统" scheme="https://www.chaierss.top/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>操作系统死锁银行家算法详解</title>
    <link href="https://www.chaierss.top/posts/bc8f3be9.html"/>
    <id>https://www.chaierss.top/posts/bc8f3be9.html</id>
    <published>2024-09-30T07:40:36.567Z</published>
    <updated>2022-12-01T06:07:38.365Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title=" 前言 "></a><font color="#798ba9"> 前言 </font></h2><p>关于处理死锁的一个经典算法 银行家算法 详解。</p><span id="more"></span><h2 id="一-银行家算法微例"><a href="#一-银行家算法微例" class="headerlink" title=" 一.银行家算法微例 "></a><font color="#798ba9"> 一.银行家算法微例 </font></h2><p>其实我们把资源看的简单一点，只看一个资源。</p><p>比如说你有10块钱，有很多人想向你借钱。<br>银行家算法就是保证有人向你借钱的时候，你能够有钱借给他。</p><p>具体的想法是这样的，比如说有A B C D 4个人想跟你借钱。<br>你给每人都发了2块钱。<br>每个人的需求都不一样。<br>A 想要借 5块钱,B想要借 8块钱，C想要借 6块钱,D想要借 3块钱。</p><p>这样我们就可以搭建一个简单粗略的需求表。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">借钱人       想要借多少       已经借多少给他       还要借多少给他</span><br><span class="line">  A             5                 2                   3</span><br><span class="line">  B             8                 2                   6</span><br><span class="line">  C             6                 2                   4</span><br><span class="line">  D             3                 2                   1</span><br></pre></td></tr></table></figure><p>这个时候你看 你手上还有2块钱，还能借给谁呢？<br>D D还差1块钱就满足了，所以你选择借给D，然后D借完了钱用好了还给你了。</p><p>这个时候你手上就有4块钱了。 ABC还在等着排队跟你借钱呢。<br>这个时候你再看，B跟你要6块，你没有啊，只能选择借给A或者C,看关系优先借给谁把。</p><p>所以你选择借给A，然后A借完了钱用好了还给你了。<br>这个时候你手上就有6块钱了。 就剩BC了。<br>你都可以满足他们的借款需求，看关系优先借给谁。</p><p>所以你选择借给C，然后C借完了钱用好了还给你了。<br>这个时候你手上就有8块钱了。 最后借给B。</p><p>我们这个放贷的顺序，就是D-A-C-B</p><p>这个就是一个简单的银行家算法的安全序列。</p><p><br></p><h2 id="二-银行家算法详解"><a href="#二-银行家算法详解" class="headerlink" title=" 二.银行家算法详解 "></a><font color="#798ba9"> 二.银行家算法详解 </font></h2><p>当然这个只是单个资源的情况下，多个资源就是共同判断。</p><p>银行家算法也有很多限制条件。</p><ol><li>顾客的借款操作依次顺序进行。</li><li>顾客需要说明最大借款额。</li></ol><p><br></p><h2 id="三-安全序列和能否满足"><a href="#三-安全序列和能否满足" class="headerlink" title=" 三.安全序列和能否满足 "></a><font color="#798ba9"> 三.安全序列和能否满足 </font></h2><h2 id="1-安全序列"><a href="#1-安全序列" class="headerlink" title=" 1.安全序列 "></a><font color="#798ba9"> 1.安全序列 </font></h2><p>安全序列就是上面微例的一个借款顺序，计算机中就是进程的运行顺序，并不唯一。</p><h2 id="2-能否满足"><a href="#2-能否满足" class="headerlink" title=" 2.能否满足 "></a><font color="#798ba9"> 2.能否满足 </font></h2><p>这点就毋庸置疑。</p><ol><li>看你的钱能不能满足借款人的需求。 你有10块钱 别人想要100 满足不了。</li><li>突然提出请求也很简单，假设我把钱借给它了，那么我剩下的钱，能不能支持我再进行一次安全序列来判断满不满足。</li></ol>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot; 前言 &quot;&gt;&lt;/a&gt;&lt;font color=&quot;#798ba9&quot;&gt; 前言 &lt;/font&gt;&lt;/h2&gt;&lt;p&gt;关于处理死锁的一个经典算法 银行家算法 详解。&lt;/p&gt;</summary>
    
    
    
    <category term="知识点" scheme="https://www.chaierss.top/categories/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
    <category term="操作系统" scheme="https://www.chaierss.top/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>操作系统进程深层理解</title>
    <link href="https://www.chaierss.top/posts/9efe5c67.html"/>
    <id>https://www.chaierss.top/posts/9efe5c67.html</id>
    <published>2024-09-30T07:40:36.567Z</published>
    <updated>2022-12-01T06:07:38.337Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title=" 前言 "></a><font color="#798ba9"> 前言 </font></h2><p>近期复习回顾了一下操作系统的一些知识点，关于进程的一些深层理解。</p><span id="more"></span><h2 id="一-讲一个小故事"><a href="#一-讲一个小故事" class="headerlink" title=" 一.讲一个小故事 "></a><font color="#798ba9"> 一.讲一个小故事 </font></h2><p>很久很久以前，有一个人，开了一家<font style="color: orange;">公司</font>。</p><p>投资建造了一个工厂，叫 <font style="color: orange;">东厂</font>，招聘了很多工人，有 <font style="color: orange;">东甲 东乙 东丙</font> 三个人。</p><p>后面赚钱了，又开了第二个厂，叫 <font style="color: orange;">西厂</font>，又招了很多人去西厂，有 <font style="color: orange;">西甲 西乙 西丙</font> 三个人。</p><h2 id="1-单核与多核"><a href="#1-单核与多核" class="headerlink" title=" 1.单核与多核 "></a><font color="#798ba9"> 1.单核与多核 </font></h2><p>当然这是人的世界，而对于计算机来说，<font style="color: orange;">CPU</font>就像是那家 <font style="color: orange;">公司</font>。</p><blockquote><p><font style="color: orange;">单核</font>的CPU就是<font style="color: orange;">一个</font>工厂;</p><p><font style="color: orange;">多核</font>的CPU就是<font style="color: orange;">多个</font>工厂。</p></blockquote><h2 id="2-进程与线程"><a href="#2-进程与线程" class="headerlink" title=" 2.进程与线程 "></a><font color="#798ba9"> 2.进程与线程 </font></h2><blockquote><p><font style="color: orange;">工厂</font>其实就是<font style="color: orange;">进程</font>，工厂里的<font style="color: orange;">工人</font>就是<font style="color: orange;">线程</font>。<br>这就是进程与线程之间的关系，一个进程可以包括多个线程。</p></blockquote><h2 id="3-并发与并行"><a href="#3-并发与并行" class="headerlink" title=" 3.并发与并行 "></a><font color="#798ba9"> 3.并发与并行 </font></h2><blockquote><p>东厂单独生产的时候，东甲 东乙 东丙 一起工作，这就是<font style="color: orange;">并发</font>。<br>东厂和西厂同时生产，东甲 西甲 一起工作，这就是<font style="color: orange;">并行</font>。</p></blockquote><p><br></p><h2 id="二-小老板的一些变化"><a href="#二-小老板的一些变化" class="headerlink" title=" 二.小老板的一些变化 "></a><font color="#798ba9"> 二.小老板的一些变化 </font></h2><p>OK，相信听完这个小故事，你应该对这些概念有了一个初步的理解，我们接下来就研究一下并发的一些线程关系。</p><p>接上面的故事，小老板做生意亏掉了，变卖了很多资产，只剩下一个<font style="color: orange;">东厂</font>，还有他的三个工人 <font style="color: orange;">东甲 东乙 东丙</font>。</p><h2 id="1-互斥"><a href="#1-互斥" class="headerlink" title=" 1.互斥 "></a><font color="#798ba9"> 1.互斥 </font></h2><p>因为资产缩水，小老板克扣工厂，压缩工人工时，只建造了一个厕所。<br>那么问题来了，东甲 东乙 东丙 想要同时上厕所，怎么办呢？</p><p>相信上过公共厕所的同学应该都知道啊，应该是以下步骤：</p><ol><li>看厕所门标识，绿的表示没人 可以上 红的表示有人 等一等</li><li>如果标识是绿的 开门进去上厕所，关门标识变红</li><li>上完厕所 开门出去 标识变绿</li></ol><p>这个其实就是<font style="color: orange;">互斥</font>的概念。</p><blockquote><p>指某一资源同时只允许一个访问者对其进行访问，具有唯一性和排它性。</p></blockquote><p>东甲 东乙 东丙 是都具有一个上厕所的权力的，人人平等，没有先后，因此</p><blockquote><p>互斥无法限制访问者对资源的访问顺序，即访问是无序的。</p></blockquote><h2 id="2-Mutex与Semaphore"><a href="#2-Mutex与Semaphore" class="headerlink" title=" 2.Mutex与Semaphore "></a><font color="#798ba9"> 2.Mutex与Semaphore </font></h2><p>事实上，这种单个资源，也是<font style="color: orange;">“互斥锁”（Mutual exclusion）（缩写 Mutex）</font>的概念，<br>互斥锁主要是为了防止多个线程同时读写某一块内存区域。</p><p>小老板后来良心发现了，他改良了一下厕所，新增了2个厕所，这样上厕所就不用排队了，但是要是后面又有新员工来了怎么办呢？</p><p>再加N个厕所？也不现实，只能让员工排队，加了一块电子屏幕，无人显示绿色，有人显示红色。<br>后到的人发现全是红色，就得门口排队等。</p><p>这种做法叫做<font style="color: orange;">“信号量”（Semaphore）</font>，用来保证多个线程不会互相冲突。</p><blockquote><p>Mutex是Semaphore的一种特殊情况（N=1的情况）。<br>Mutex简单且效率高，因此在单独资源的情况下，还是采用Mutex。</p></blockquote><h2 id="3-同步"><a href="#3-同步" class="headerlink" title=" 3.同步 "></a><font color="#798ba9"> 3.同步 </font></h2><p>同步的概念其实不难理解，它其实就是通过其它机制实现访问者对资源的有序访问。</p><p>比如说<br>小老板的东厂，东甲负责生产产品，东乙负责把生产的产品存到仓库里，东丙负责把仓库里的产品搬出去卖掉。<br>先后顺序肯定是 先东甲再东乙再东丙。</p><p>这个就是同步。</p><p><br></p><h2 id="三-信号量中的PV操作含义"><a href="#三-信号量中的PV操作含义" class="headerlink" title=" 三.信号量中的PV操作含义 "></a><font color="#798ba9"> 三.信号量中的PV操作含义 </font></h2><p>原来这是狄克斯特拉用荷兰文定义的。<br>因为在荷兰文中</p><blockquote><p>通过叫passeren<br>释放叫vrijgeven</p></blockquote><p>PV操作因此得名。这是在计算机术语中不是用英语表达的极少数的例子之一。</p><blockquote><p>P操作:信号量 - 1<br>V操作:信号量 + 1</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot; 前言 &quot;&gt;&lt;/a&gt;&lt;font color=&quot;#798ba9&quot;&gt; 前言 &lt;/font&gt;&lt;/h2&gt;&lt;p&gt;近期复习回顾了一下操作系统的一些知识点，关于进程的一些深层理解。&lt;/p&gt;</summary>
    
    
    
    <category term="知识点" scheme="https://www.chaierss.top/categories/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
    <category term="操作系统" scheme="https://www.chaierss.top/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>如何通过贷款计划获取总期数和当期期数</title>
    <link href="https://www.chaierss.top/posts/bedcf5a.html"/>
    <id>https://www.chaierss.top/posts/bedcf5a.html</id>
    <published>2024-09-30T07:40:36.550Z</published>
    <updated>2022-12-01T06:07:38.377Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="10dd2d705fb01ba0310b81eb1a0acfb7eeac57e014d07b880f2639b53d607578">4630436162ade97ba2718b7d0c4b3b6351ade09e539dfebeb5402828e29e64b00fbe4907c08d56e722c85b5b17c0d072c344d982bc14b365e0cbb8e558fc3b8ab063cda18b4d552bd7d8a708322b82f922de37a20fab3cb16e291ca194d3eac9cad734253618e7bb61e7608e5cd9aecb55a3fe3b922b8ee794d9d15782ba4aeaf9cc359d4689cf2a05b033f55c401cd6e12fd1ff5f49d6d87e17e0960cc956189017bde9c995983352b326b46a9038d9be1a4e7447ec932e57c8cec6b3fb9f3e4d393c06ea73b8535831a35b4247bc9ca975b06fa22b0726cd9d9bf8737ca84fc35618770ea725d1bafb5b77c5b96e52d6d8e526ae047fe2de9b59d9aa6826db9d047f8c9bd0db007073226031818fce4119c3b5e1200c510972bc0f43a5aaf36c9b4dbfbe97fceec737b5f5859135d43037244de73617c6af7a10f4999c339d76e9be337bfebccaac987c9c652c5ed40aea94715127e6d55f48977c5de94267c7b6f539e4e343ab13ed96b00a7b86e86025c5b3ea0df3d83752157274a8b902c1ca9088ceea310e83e112dd272680f2299720ff57709f93d94db0dfa43786c7229a3654db7dfe461fce3fcc4469d10b3d9243f53e250ff5aa4df400452dcfb2ef7e3e880aa2deaba1c5c467853caac0c52b262f75f59f9849ff04d302122a63c543989ae5d2333748dbb3a9be874480f46d1a3d80e4359bcf2b02d416d61f66e8fd4f799940f4a56dd05cd7a285acfa85f791f4c2602405179adb53e1869fd72d7e433d2f3091fff792be062f6429199086ee7d2446a79d309f720eb16d0bdf7c9a9699c21a90b250975aedce3c47d588b8b8c98bb7b3219dd2f87e18a22df5da054bfe3d5259a97ac839ea4715690ac5be70ef12ef18488c69ca856a747d230144cc0796c5c5d624ce3e618f01c46c6acc7af613d4d6bb38a7fa85a0957f679db0691210bb5107ae8e39825f24c0ed7689f5fb4d9a5c1100e59fb95ce5da71fefd376b9ded1172aeb46df379b7324114b8f47624fc67091fb3ebd12e7b3df032e5ea7c833994fe49b547e9ca7a271556f7246bcd88aef0f649d38d165d9c18752d7b1fde1b41dc21928cf31de2afe6d23d9e8c1120dfa646da8ddf5ef7286005e7362626a9119b8453fec5c2cb4772137908e4b0fdb396a43a895ffbfab631adaaa8b64eb4cbe8466376daaec6f2ab666bfa5f4791380ce79dee2893b26e7a7cc3594f4ce389d91715be9222aef0afec7919720eb42a55ab094781252e334359a6932d7fdb37c2f546c2a7d396cf4b8823f59354a9c963dc0ac9b038c968646fb02ab43317435974a652848ce6aa90c30b4a2479bd904dfd755a1177aed3aab35544fe7feb7f5954b205ce02641f548ff72e5c8ade3e179bc2dd4ca9ad5a5df6d16a1e7d61b35dd1056802e53edb73746825ae1bc3b2320e441db1e21ec7183942bbd5fb49a6230f3e0dc2f1c5f20a33fc883f805910627c3f5bfbd593e7dcb853a09d5daa2c8d286f4907c5e84d1ddf212a8608ea1e46a4ac9ba3aba83c5fb4fd2f8afe8f073094afa5e44d2897c5823e13b05ce92096e191d56acf387e01e615bebe57e9ff09f1fb94497b88d14065474071b1ab968740cf9de2bcbb1911fcde14da99d138fcf4a24629291abaa5955ec2ffbc348a34243b17339efb74fcab8641ee0408b5f25580fa8237d5dcc814639ea70572859123bbc106fac2765dda557fef61fb58a4503626048e5fbf0c5ac852c88d1b637bb0f5f7b9ebdd323b3bafd9547f0285ae76703ed997d54e25e3bda38d31a77f46109c478d484638c7204fc41239b6c98a84ea27f73187cdffa5df11d4654e977e6b68c78c1c4b232c68dbe1749f80e742b7a44d89435168362659f4811c287e736650e081f02683649453c595aec17d8d7aa7390f7ca30c6074363d37ab5feffc554542be549e7fc097009098496cee810c5e670bc67909d84587d450a95e77a3c7886b89e245a6a28675d05fd98c3bc4b5477ce608f703b850b3a77c064e42b8e9548045c8c0cb03a600a0a08f04b7c52c15e1f7f4273a8b4a5d7d8209e729fb112e514779e1514acdfbb9c0337bd6c3357c82407a0dd9ee019616d10d32756ddc5a76625d35a67f6d662e4eca7a34033e4cef72f8f4c41137832efddc1a5a1fbcfad420e3cb6da8f9ca941389c0c36dbebe303228636983f75db62c011f0b491991060ff488ae87a8fe841907ff9b4cc3088bfe975a024170a8ea58746c33e8aaa891708c1ed8f0b8982e990058e1685dd1adc045d9f3e1d99af597ab5d7ddf3e09d223e5d62eceae3c26fc74782f830f2aa82eba18e20ff4d40d8299cb06e11d0a053654133446289edf5c9135642fbc03f7529a99d3b67f65b4c600d29f5fb571d49e5ac51c3e20fb6dac76d546e51869aa7ef6d4b8d3fc6d21455ead0eef80ba430ff9e213fc6a4813400636087025f3dcdb4328d9f4b4afa1eb3185c5d4de207971827a45a4b8b31db9df9004a57855dbd18072a956f81998d5395a454e3a13e867b0eb8360a7545a8f6047c76082c3333f8fd379d8a2cfd3d4e982110e1e53d6d53f938cc39f9f37a71c50048afbf030002ca6cf654dc33cd8238946b44497e5b6e52b4c96a978baebe40add3362d9b7fe4f7eefb20ddc5d7243fad82c84759b1ae05edad5aa519719c71f2639e6122480f9a7b8945cf3a53fb26ea4ba484da723a57e75c2dc8efb076470bdf1e58d348cc1751361c88ddbd2b94e0a2c2d5fb10836e8a0e74df9b0093edd5d405bc2e3fab54c9b68e323412c7f203aff2e5a0e7be2e00401b5a9a08d854cab6b0ac7b29f08c40c3a5b4b13f7504800a0636760e3ab6a522f3e6434122d3c6ef9ee253782fb6c13eb0e45dccb18e8969c9e4e4af1f61d239c632cab6ef243b1b013f85adb16d1d04922c2ee88bd1a445a1357779345411feb16f2a0e8e0ec2b3b310e173458d523642ed01756cc8f245a2113a56f48699f5aa116c7a0a87169d2234a6f5ee6a3037ba575c151634e905313f1780426d090bf883d5dcbc96088b65924b9d6ef26293d0f949e3a9cc8646e67f3f9608febb3947d0a9678a8db45a7f192e2a5347038c3ba6edb91bda1ac6d36bec6a6739b032645a2a3d69eb6173d19e3906090891334ce4edc52a6c1daf52ee77e90b74c7edf10efd9deaceff56d8c4351e455b53432d33adb339e1c5982e9ebf66e5254a6f4664db67224b395f75d2c630202e980db26a4f98cc8d311f1e5464252d1a990096ef14d74000f1da56a5f46358d7a362bb25e50bbf8cc4cae2b483a157e763c7fe8831b25c531a81ed59b70ec7dfe5e29f4a53dee6980a72ea89f7f1cefb60ba5790ea6e33cdc147df6b4f83d6e0619032a11a86183b727b899011b135c065289bf2ab83dfed873cb2352218853c86c31427922c1e5aec083a2b106f5a365ba4fcff71535b11a5eff0efd8fefb437cd51e350df0e3667b0e8bee1a0672d8803c2416bd9ec67410312b73579f458b2da0d8f61cccd1c6f913c82ee2764647e8475fa64cd87cf7ebe0b4830d852d28cff960f5d929eeac0ee6231c0da73f4ce8d8de9fb4214eeb7bf4e5a4f5aa6cdb1cc5338af3a897e579ac5dff1e29cdd193972c652842ba9e3feead2e00d12cc4593880a9f6612b800e2c82a0a14c15f40746e10dde4b79686aa8855855f986c4d4793ec2b49d8a153ca5967fc1027032f540ae95c0e7dfaaa515d4f72119b9d4e367e0530e8167fdf49ba826573cb9072f790647fb4703d66874145fe564f8e1e47c43678958ca5cb0508be3bbdfb653359245529be3051d7dcb6d1a59dbebacb3d0cfd991e762e4fd401864afe1f9ea871670f01b58ef1b60a2f7c5744255cf0ffafd4ee400ed47a906cc7709b2061f1ed111a87469877cae3ce5247b1a4e34a59abf0179c55112eea34b64b65865fdfff5715da4a53cf63e9d08746c5b0f5e39b29709e7cd7c425dc8fcacb59bd90833af9e0dbf76477c0f514674eca18063c78a2ad737fd002b64a4af5ecb48c719d43a72e00e8b2e1dc4af86320bee16be8ccc72f5ef9a4e5c74086a0f0bc9e422cfddedce7c8f58e6a30941863092d7f10a07ed230525d81958071257bee08a50e69acc29c87ce6f30a6f5a241d59f92842d0615b597ce0f5a765f8306c61ccc0106f2da93a8078e553406a3f0a1861c63af1285dc7105cb37f069173cd770f280d4427efe86415c42abc04b38587a61cb2c9c53cb41268a26dfe4ce5c5190f6ccfb27608dcb3696db89ce45febb8b452e34403f884f7846f24607657be8cc92e91a534f662b2c6ceba6775748371783a5d6ebebf096e1db7491eb9ab3679c18441ea281a7852f12ee1a01c7d42b832e52765c8c3b83679deb936dac652c3a173aa75f406b203adc4ab555548ea53149baf40e98c4fae0ebdd06d51c581b2844c9eb28d48c66665db38c92f1b0b0330fbb192b3f24a114f644789b727a8c939d5ae638b8052355bcb1872f7547f7645e096c22e2c01cb20f1c26aae9dddfec5d60d030f394426fa04254bf31bd1c30b568f0e572c29c932be1036609e7a2fbc54cc0cc4185969a432e41d8374502717f67c8baf1e5d3650d90765c930ccead22253f75abd46181b995f02fa7697204773474faef73947868083eb2fbdbf62d00b0bf32cbf265e307ff924126ab990355fffda0499f351809b16616dce935e23a93028f9c968459b4b08cebbe376e09580c46a95b5e39ef89a9aa8080fbda1be8075797c1be19a5af7b9d8f7b950f12de649ebe69800ce47076c7ba932b1b172106e0ed8db6a098dba24d0b1d76a4e8818a377c1e523a97bd0f99f3c1c8be7f1939ac2e97ae271191867713aed8ad6dc6a1565bce81df2aaf82252b2782ee3e4ccf0344519667655a25ff72c4104562ad76e7b8195f847a37e6b0ca17e24f1ee6bb8fb048cf833a185d73fd958b7e2160bfe2d186719c0b7cb417323c67d3b8f235f7594bd3d010cd9388986125d4be56c343d3620e7b9b9bbfe7eeda7b5041d377e1494fb25c4599cb1351683f65c2b90a17ec36f03f113eb519fe47479ab364e2fe2da4e5852eeb7fbb8303377f1735f4ac898c1bd59de5e4c4cfdedd11b6bb4100d8d86aaf5084a8900d8edc6132448e7109127d2c3cc9e7bb4188e5b1594b66cb1e945cbdd30a4f5a6403fbb1fb200bdeec01007f84b1fcf048ec9edf72538efbaa55396722f1e6369e5ab21a00eb4606827cf044ee650d9634b36d9bc2950f50423b9db5319afd83299cd891710980b7d8d3873632139d7181058b853855f459bf8923ae22b00a8115f60123c2eff579201182ee3ece1609d954c86c0f0f1e43a3c2842a624cba2a8e70fe61237d26acf8f8297ae6949347bfdee0f98f02071e13c7e0a12c1c6e31c2c53ab7448a57cd76786a75675ef2a5d0b8b51184c215befc7691599130b95e224da0187a5e133265621c42b10a381f181284a35a9aee2bf509968daebcdefd560aa431c8f2fe65670a4d8f8008fb3ff065b5502e605d9a23cb1fa719bd2fbba2ce68fa4de31cd3c23cd21ee47ce99af83449d9da3a050e54</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">文章已加密！请输入密码查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">在计算贷款的贷款期数和当前期数时，核心只存了账户的贷款计划，如何通过这个贷款计划获取总期数和当期期数呢？</summary>
    
    
    
    <category term="财务公司" scheme="https://www.chaierss.top/categories/%E8%B4%A2%E5%8A%A1%E5%85%AC%E5%8F%B8/"/>
    
    
    <category term="Oracle" scheme="https://www.chaierss.top/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>如何通过日结算余额计算日实时余额</title>
    <link href="https://www.chaierss.top/posts/cef07fa1.html"/>
    <id>https://www.chaierss.top/posts/cef07fa1.html</id>
    <published>2024-09-30T07:40:36.526Z</published>
    <updated>2022-12-01T06:07:38.353Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="989435fa35372cd9271883e96b1ba11f44e54f000595f8232d42a3c25e70f588"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">文章已加密！请输入密码查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">在计算账户的明细余额时，核心只存了账户的日结算余额，如何通过交易流水来计算日实时余额呢？</summary>
    
    
    
    <category term="财务公司" scheme="https://www.chaierss.top/categories/%E8%B4%A2%E5%8A%A1%E5%85%AC%E5%8F%B8/"/>
    
    
    <category term="Oracle" scheme="https://www.chaierss.top/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>如何将md文件转成docx文件</title>
    <link href="https://www.chaierss.top/posts/ab365873.html"/>
    <id>https://www.chaierss.top/posts/ab365873.html</id>
    <published>2024-09-30T07:40:36.503Z</published>
    <updated>2023-03-22T01:38:53.126Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title=" 前言 "></a><font color="#798ba9"> 前言 </font></h2><p>最近碰到需要将大量md文件转成docx文件的场景，于是开发了一个md2docx.exe的工具。。。</p><p>继上次md文件转成docx文件需求，后续，索性开发集成了一下多个功能继承工具包。</p><p>有哥们留言说资源挂了 2023.3.17 特地更新一下</p><span id="more"></span><h2 id="一、介绍"><a href="#一、介绍" class="headerlink" title=" 一、介绍 "></a><font color="#798ba9"> 一、介绍 </font></h2><blockquote><p>内部集成了pandoc<br>主要功能介绍</p><ul><li>功能1：md文件批量转成docx文档</li><li>功能2：批量替换文件中的字段</li><li>功能3：txt批量转成excel</li><li>功能4：excel批量转成txt</li><li>功能5：随机生成uuid</li></ul></blockquote><p><br></p><h2 id="二、使用"><a href="#二、使用" class="headerlink" title=" 二、使用 "></a><font color="#798ba9"> 二、使用 </font></h2><h3 id="下载安装"><a href="#下载安装" class="headerlink" title=" 下载安装 "></a><font color="#798ba9"> 下载安装 </font></h3><blockquote><p>百度云盘分享：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://pan.baidu.com/s/1ZSeHcmB2mOn2vU35DwlB4g?pwd=nepy </span><br></pre></td></tr></table></figure><p><br></p><blockquote><p>下载后就是如图所示的exe运行软件</p><ol><li>图标：<br><br><br><img src="https://chaierss-pictures-1301320473.cos.ap-chengdu.myqcloud.com/img/1679035969590.jpg" alt="" width="250" height="200" align="middle" /></li><li>界面：<br><br><br><img src="https://chaierss-pictures-1301320473.cos.ap-chengdu.myqcloud.com/img/clipboard_20230317_025334.png" alt="" width="750" height="350" align="middle" /></li></ol></blockquote><p><br></p><h3 id="开始"><a href="#开始" class="headerlink" title=" 开始 "></a><font color="#798ba9"> 开始 </font></h3><blockquote><p>1.0版本比较粗糙，3.0版本使用 ttkbootstrap 调了一下色</p><p>主要更新</p><ul><li>重定向恢复标准输出日志栏</li><li>功能多线程化</li><li>指示标语傻瓜化</li></ul></blockquote><h2 id="三、其他"><a href="#三、其他" class="headerlink" title=" 三、其他 "></a><font color="#798ba9"> 三、其他 </font></h2><p>如有错误欢迎联系指正,感谢您的使用！<br><br><br>好用的话点一点关注,更多更好玩好用的工具等你发现！</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot; 前言 &quot;&gt;&lt;/a&gt;&lt;font color=&quot;#798ba9&quot;&gt; 前言 &lt;/font&gt;&lt;/h2&gt;&lt;p&gt;最近碰到需要将大量md文件转成docx文件的场景，于是开发了一个md2docx.exe的工具。。。&lt;/p&gt;
&lt;p&gt;继上次md文件转成docx文件需求，后续，索性开发集成了一下多个功能继承工具包。&lt;/p&gt;
&lt;p&gt;有哥们留言说资源挂了 2023.3.17 特地更新一下&lt;/p&gt;</summary>
    
    
    
    <category term="md转docx" scheme="https://www.chaierss.top/categories/md%E8%BD%ACdocx/"/>
    
    
    <category term="工具包" scheme="https://www.chaierss.top/tags/%E5%B7%A5%E5%85%B7%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>大数据导论</title>
    <link href="https://www.chaierss.top/posts/9932f168.html"/>
    <id>https://www.chaierss.top/posts/9932f168.html</id>
    <published>2024-09-30T07:40:36.431Z</published>
    <updated>2022-12-01T06:07:38.342Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title=" 前言 "></a><font color="#798ba9"> 前言 </font></h2><p>大数据学习笔记</p><span id="more"></span><h2 id="一、企业数据分析方向"><a href="#一、企业数据分析方向" class="headerlink" title=" 一、企业数据分析方向 "></a><font color="#798ba9"> 一、企业数据分析方向 </font></h2><h2 id="数据是什么"><a href="#数据是什么" class="headerlink" title="数据是什么"></a>数据是什么</h2><blockquote><p>客观事物进行记录并可以鉴别的符号；</p></blockquote><h2 id="数据如何产生"><a href="#数据如何产生" class="headerlink" title="数据如何产生"></a>数据如何产生</h2><blockquote><p>对客观事物进行计量记录；</p></blockquote><h2 id="企业数据分析方向"><a href="#企业数据分析方向" class="headerlink" title="企业数据分析方向"></a>企业数据分析方向</h2><blockquote><p><font color="red">现状分析</font>：分析<font color="red">当下</font>的数据；现阶段的整体情况，各个部分的构成占比、发展、变动；</p><p><font color="red">原因分析</font>：分析<font color="red">过去</font>的数据；某一现状为什么发生，确定原因，做出调整优化；</p><p><font color="red">预测分析</font>：结合数据预测<font color="red">未来</font>；结合已有数据预测未来的发展趋势；</p></blockquote><h3 id="离线分析（Batch-Processing）————-原因分析"><a href="#离线分析（Batch-Processing）————-原因分析" class="headerlink" title="离线分析（Batch Processing）———— 原因分析"></a><font color="red">离线分析</font>（Batch Processing）———— 原因分析</h3><p>面向过去，面向历史，分析已有的数据；<br>在时间维度明显成<font color="green">批次性变化</font>。一周一分析（T+7），一天一分析（T+1）,所以也叫做<font color="red">批处理</font>。</p><h3 id="实时分析（Real-Time-Processing-Streaming）————-现状分析"><a href="#实时分析（Real-Time-Processing-Streaming）————-现状分析" class="headerlink" title="实时分析（Real Time Processing|Streaming）———— 现状分析"></a><font color="red">实时分析</font>（Real Time Processing|Streaming）———— 现状分析</h3><p>面向当下，分析实时产生的数据；<br>数据产生到数据分析到数据应用的时间间隔很短，可细分秒级，毫秒级；</p><h3 id="机器学习（Machine-Learning）————-预测分析"><a href="#机器学习（Machine-Learning）————-预测分析" class="headerlink" title="机器学习（Machine Learning）———— 预测分析"></a><font color="red">机器学习</font>（Machine Learning）———— 预测分析</h3><p>基于历史数据和当下产生的实时数据预测未来发生的事情；<br>侧重于<font color="green">数学算法</font>的运用，如分类、聚类、关联、预测；</p><p><br></p><h2 id="二、数据分析基本步骤"><a href="#二、数据分析基本步骤" class="headerlink" title=" 二、数据分析基本步骤 "></a><font color="#798ba9"> 二、数据分析基本步骤 </font></h2><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><blockquote><p>张文霖在《数据分析六部曲》说，典型的数据分析应该包含以下几个步骤：</p><ul><li>明确分析目的和思路</li><li>数据收集</li><li>数据处理</li><li>数据分析</li><li>数据展示</li><li>报告攥写</li></ul></blockquote><h2 id="Step1：明确分析目的和思路"><a href="#Step1：明确分析目的和思路" class="headerlink" title="Step1：明确分析目的和思路"></a>Step1：明确分析目的和思路</h2><blockquote><p>目的：整个分析流程的起点，为数据的收集、处理、分析提供清晰的方向；<br>思路：<font color="red">分析框架体系化</font>；先分析什么，再分析什么，后分析什么，使各分析节点具有逻辑联系，保证分析维度的<font color="red">完整性</font>，分析结果的<font color="red">有效性</font>和<font color="red">正确性</font>；需要<font color="green">数据分析方法论</font>支撑；<br>数据分析方法论：一些营销管理学相关理论，比如用户行为理论，<font color="red">PEST分析法</font>，5WSH分析法；</p></blockquote><h2 id="Step2：数据收集"><a href="#Step2：数据收集" class="headerlink" title="Step2：数据收集"></a>Step2：数据收集</h2><blockquote><p>数据<font color="green">从无到有</font>的过程：比如传感器收集气象数据、埋点收集用户行为数据；<br>数据<font color="green">传输搬运</font>的过程:比如采集数据库数据到数据分析平台；</p></blockquote><p>当下企业当中一些常见的数据源和种类：</p><blockquote><p>业务数据（RDBMS）<br>日志数据（服务器、应用日志)<br>爬虫数据（爬虫数据库）<br>互联网公开数据（行业、政府网站）</p></blockquote><h2 id="Step3：数据处理"><a href="#Step3：数据处理" class="headerlink" title="Step3：数据处理"></a>Step3：数据处理</h2><blockquote><p>准确来说，应该称之为<font color="red">数据预处理</font>；<br>数据预处理需要对收集到的数据进行加工整理，形成适合数据分析的样式，主要包括<font color="green">数据清洗</font>、<font color="green">数据转化</font>、<font color="green">数据提取</font>、<font color="green">数据计算</font>；<br>数据预处理可以保证数据的一致性和有效性，让数据变成<font color="green">干净规整的</font><font color="red">结构化数据</font>；</p></blockquote><h2 id="Step4：数据分析"><a href="#Step4：数据分析" class="headerlink" title="Step4：数据分析"></a>Step4：数据分析</h2><blockquote><p>用适当的分析方法及分析工具，对处理过的数据进行分析，提取有价值的信息，形成有效结论的过程；<br>需要掌握各种<font color="green">数据分析方法</font>，还要熟悉<font color="green">数据分析软件</font>的操作;</p></blockquote><h2 id="Step5：数据展现"><a href="#Step5：数据展现" class="headerlink" title="Step5：数据展现"></a>Step5：数据展现</h2><blockquote><p>数据展现又称之为<font color="green">数据可视化</font>，指的是<font color="green">分析结果图标展示</font>，因为人类是视觉动物；<br>数据可视化（Data Visualization）属于数据应用的一种；<br>注意，<font color="red">数据分析的结果不是只有可视化展示</font>，还可以继续数据挖掘（Data Mining）、即席查询(Ad Hoc)等；</p></blockquote><h2 id="Step6：报告攥写"><a href="#Step6：报告攥写" class="headerlink" title="Step6：报告攥写"></a>Step6：报告攥写</h2><blockquote><p>数据分析报告是对整个数据分析过程的一个总结与呈现；<br>把数据分析的起因、过程、结果及建议完整地呈现出来，供决策者参考；<br>需要有明确的结论，最好有建议或解决方案；</p></blockquote><p><br></p><h2 id="三、大数据时代"><a href="#三、大数据时代" class="headerlink" title=" 三、大数据时代 "></a><font color="#798ba9"> 三、大数据时代 </font></h2><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><blockquote><p>最早提出“大数据”时代 的是 麦肯锡 全球知名咨询公司；<br>2019年 央视《大数据时代》 政府治理、民生服务、数据安全、工业转型、未来生活等方面会带来改变和影响；</p></blockquote><h2 id="大数据定义"><a href="#大数据定义" class="headerlink" title="大数据定义"></a>大数据定义</h2><blockquote><p><font color="red">大数据（Big Data）</font>是指无法在一定时间范围内用常规软件工具进行捕捉、管理和处理的数据集合；<br>是需要新处理模式才能具有更强的决策力、洞察发现力和流程优化能力的海量、高增长率和多样化的信息资产；</p></blockquote><h2 id="大数据5V特征"><a href="#大数据5V特征" class="headerlink" title="大数据5V特征"></a>大数据5V特征</h2><blockquote><p>5个V开头的单词，从5各方面准确、生动、形象的介绍了大数据特征；</p><ul><li>DVolume：数据体量大<br>采集数据量大；<br>存储数据量大；<br>计算数据量大；<br>TB、PB级别起步；</li><li>Variety：种类、来源多样化<br>种类：结构化、半结构化、非结构化；<br>来源：日志文本、图片、音频、视频；</li><li>Value：低价值密度<br>信息海量但是价值密度低；<br>深度复杂的挖掘分析选哟机器学习参与；</li><li>Velocity：速度快<br>数据增长速度快；<br>获取数据速度快；<br>数据处理速度快；</li><li>Veracity：数据的质量<br>数据的准确性；<br>数据的可信赖度；</li></ul></blockquote><p>应用场景：</p><blockquote><p>电商领域：精准广告位、个性化推荐、大数据杀熟；<br>传媒领域：精准营销、猜你喜欢、交互推荐；<br>金融方面：理财投资；<br>交通领域：拥堵预测；<br>电信领域：舆情监控，用户画像；<br>安防领域：犯罪预防、天网监控；<br>医疗领域：智慧医疗、疾病预防、病源追踪；</p></blockquote><p><br></p><h2 id="四、分布式与集群"><a href="#四、分布式与集群" class="headerlink" title=" 四、分布式与集群 "></a><font color="#798ba9"> 四、分布式与集群 </font></h2><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><blockquote><p>分布式、集群是两个不同的概念，但口语中经常混淆二者</p><ul><li>分布式：<font color="green">多台机器</font>；每台机器上部署<font color="red">不同组件</font>；</li><li>集群：<font color="green">多台机器</font>；每台机器上部署<font color="red">相同组件</font>；</li></ul></blockquote><h2 id="混淆点"><a href="#混淆点" class="headerlink" title="混淆点"></a>混淆点</h2><blockquote><p>分布式、集群的共同点是：<font color="red">都是多台机器（服务器）组成的</font>；<br>因此口语中混淆两者概念的时候都是：<font color="red">相对于单机来说的</font>；</p></blockquote><h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><blockquote><p>数据大爆炸，海量数据处理场景面临问题；</p></blockquote><p>如何存储？ 单机存储有瓶颈，多台机器分布式存储；<br>如何计算？ 单台计算能力有限，多台机器分布式计算；</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot; 前言 &quot;&gt;&lt;/a&gt;&lt;font color=&quot;#798ba9&quot;&gt; 前言 &lt;/font&gt;&lt;/h2&gt;&lt;p&gt;大数据学习笔记&lt;/p&gt;</summary>
    
    
    
    <category term="知识点" scheme="https://www.chaierss.top/categories/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
    <category term="大数据" scheme="https://www.chaierss.top/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>同业拆借详解</title>
    <link href="https://www.chaierss.top/posts/6429c849.html"/>
    <id>https://www.chaierss.top/posts/6429c849.html</id>
    <published>2024-09-30T07:40:36.426Z</published>
    <updated>2022-12-01T06:07:38.358Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title=" 前言 "></a><font color="#798ba9"> 前言 </font></h2><p>对同业拆借业务的详细理解</p><span id="more"></span><h2 id="一、什么是同业拆借"><a href="#一、什么是同业拆借" class="headerlink" title=" 一、什么是同业拆借 "></a><font color="#798ba9"> 一、什么是同业拆借 </font></h2><blockquote><p>同业拆借（放）（inter-banklending、borrowing）指的是银行之间为了解决短期内出现的资金余缺而进行的相互调剂，是具有法人资格的金融机构及经法人授权的非法人金融机构分支机构之间进行<font color="red">短期资金融通的行为，目的在于调剂头寸和临时性资金余缺。</font></p></blockquote><p>发生在一个工作日结束后银行对账目进行结算时发现资金出现多于或短缺的情况下，为了使第二天的工作照常进行或对富余款项进行利用。</p><p>同业拆借（放）的主要交易对象为<font color="red">超额准备金.</font></p><ul><li>拆入行向拆出行开出本票；</li><li>拆出行则对拆入行开出中央银行存款支票即超额准备金。</li><li>对资金贷出者而言是拆放，对拆入者而言则是拆借。同业拆借发生量大，交易频繁，对市场反应敏感，能作为一国银行利率的中间指标。</li></ul><p><br></p><h2 id="二、同业拆借的特点是什么"><a href="#二、同业拆借的特点是什么" class="headerlink" title=" 二、同业拆借的特点是什么 "></a><font color="#798ba9"> 二、同业拆借的特点是什么 </font></h2><p>同业拆借，同业拆借市场具有以下特点：</p><ol><li>融通资金的期限一般比较短；</li><li>参与拆借的机构基本上是在中央银行开立存款帐户，交易资金主要是该帐户上的多余资金；</li><li>同业拆借资金主要用于短期、临时性需要；</li><li>同业拆借基本上是<font color="red">信用拆借</font>。同业拆借可以使商业银行在不用保持大量超额准备金的前提下，就能满足存款支付的需要。1996年1月3日，我国建立起了全国统一的同业拆借市场并开始试运行。</li></ol><p><br></p><h2 id="三、同业拆借有哪些原则"><a href="#三、同业拆借有哪些原则" class="headerlink" title=" 三、同业拆借有哪些原则 "></a><font color="#798ba9"> 三、同业拆借有哪些原则 </font></h2><p>商业银行进行同业拆借活动时，必须遵循以下原则：</p><h2 id="自主性原则"><a href="#自主性原则" class="headerlink" title="自主性原则"></a>自主性原则</h2><blockquote><p>同业拆借是一种信用行为，在进行拆借资金交易时，必须承认和尊重市场主体（交易双方）的权利和义务，严格遵循自愿协商、平等互利、自主成交的原则，维护市场经营者的合法权益，形成平等竞争的有序环境，保证资金的合理流动。</p></blockquote><h2 id="偿还性原则"><a href="#偿还性原则" class="headerlink" title="偿还性原则"></a>偿还性原则</h2><ul><li>对拆出方来说，由于拆出的是本行暂时闲置不用的资金，有一定期限限制，因此必须按期收回。</li><li>对拆入方来说，拆入资金只是拥有一定期限内的资金使用权，并不拥有长期使用的权利，也不改变资金的所有权，因而必须到期如数偿还。</li></ul><h2 id="短期性原则"><a href="#短期性原则" class="headerlink" title="短期性原则"></a>短期性原则</h2><blockquote><p>同业拆借的典型特征之一是期限短，属一种短期融资。</p><ul><li>从拆出方看，拆出的资金是银行的暂时闲置的资金，从数量和期限上都具有不确定性，因而其资金运用必须是短期的。</li><li>就拆入方而言，向同业拆入资金主要是解决临时性储备不足的资金需要，如因清算联行汇差而出现的临时性头寸不足和头寸调度方面的突发性资金需求等。因此拆入方也应坚持拆入资金的短期性原则，一旦贷款收回或存款增加，就应立即归还这种借款。</li></ul></blockquote><p><br></p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><pre><code>https://www.fabao365.com/zhaiwu/92476/</code></pre>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot; 前言 &quot;&gt;&lt;/a&gt;&lt;font color=&quot;#798ba9&quot;&gt; 前言 &lt;/font&gt;&lt;/h2&gt;&lt;p&gt;对同业拆借业务的详细理解&lt;/p&gt;</summary>
    
    
    
    <category term="财务公司" scheme="https://www.chaierss.top/categories/%E8%B4%A2%E5%8A%A1%E5%85%AC%E5%8F%B8/"/>
    
    
    <category term="金融" scheme="https://www.chaierss.top/tags/%E9%87%91%E8%9E%8D/"/>
    
  </entry>
  
  <entry>
    <title>关于特定节假日导致次日(工作日)分类错误的问题处理</title>
    <link href="https://www.chaierss.top/posts/790bb422.html"/>
    <id>https://www.chaierss.top/posts/790bb422.html</id>
    <published>2024-09-30T07:40:36.413Z</published>
    <updated>2022-12-01T06:06:39.301Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="c4312384c2a30d202e9795d3962ed1e776a615cc14481e515f617a985d6800db"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">文章已加密！请输入密码查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">在日常工作中，遇到一些期限范围的问题，例如次日，次日要求为工作日，那么其在遇到一些月初放假的节假日中，范围是变化的，导致了一些问题出现，笔者提供了如下思路：</summary>
    
    
    
    <category term="财务公司" scheme="https://www.chaierss.top/categories/%E8%B4%A2%E5%8A%A1%E5%85%AC%E5%8F%B8/"/>
    
    
    <category term="Oracle" scheme="https://www.chaierss.top/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>关于java.lang.IllegalArgumentException:KFC Crazy Thursday need $50的问题</title>
    <link href="https://www.chaierss.top/posts/bfd22fc2.html"/>
    <id>https://www.chaierss.top/posts/bfd22fc2.html</id>
    <published>2024-09-30T07:40:36.410Z</published>
    <updated>2022-12-01T06:07:38.371Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title=" 前言 "></a><font color="#798ba9"> 前言 </font></h2><p>关于java.lang.IllegalArgumentException:KFC Crazy Thursday need $50的问题</p><span id="more"></span><h2 id="老规矩，先贴代码"><a href="#老规矩，先贴代码" class="headerlink" title=" 老规矩，先贴代码 "></a><font color="#798ba9"> 老规矩，先贴代码 </font></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">package com.kfc.thursday</span><br><span class="line"> </span><br><span class="line">import java.kfc.*</span><br><span class="line"> </span><br><span class="line">public class kfc&#123;</span><br><span class="line">    public static Money thursday()&#123;</span><br><span class="line">        Money balance = pay();</span><br><span class="line">        System.out.println(balance.Integer())</span><br><span class="line">    &#125;</span><br><span class="line">    public Money pay(Money moneyNow)&#123;</span><br><span class="line">        Money balance=moneyNow.getWallet().getMoney()-50;</span><br><span class="line">        return balance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="报错信息如下："><a href="#报错信息如下：" class="headerlink" title=" 报错信息如下： "></a><font color="#798ba9"> 报错信息如下： </font></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java.lang.IllegalArgumentException: KFC Crazy Thursday need $50.</span><br></pre></td></tr></table></figure><p>这是一个经常出现在系统时间为星期四的情况下的错误，在执行moneyNow.getWallet().getMoney()时，函数内部调用的zfbWallet或者wechatWallet函数出了问题，返回了一个null值，从而导致报错。</p><h2 id="解决方案："><a href="#解决方案：" class="headerlink" title=" 解决方案： "></a><font color="#798ba9"> 解决方案： </font></h2><p>继承Vme50接口然后继承getMoney(Money transfer)方法即可解决。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot; 前言 &quot;&gt;&lt;/a&gt;&lt;font color=&quot;#798ba9&quot;&gt; 前言 &lt;/font&gt;&lt;/h2&gt;&lt;p&gt;关于java.lang.IllegalArgumentException:KFC Crazy Thursday need $50的问题&lt;/p&gt;</summary>
    
    
    
    <category term="知识点" scheme="https://www.chaierss.top/categories/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
    <category term="Java" scheme="https://www.chaierss.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>python3 cv2安装失败</title>
    <link href="https://www.chaierss.top/posts/c5196243.html"/>
    <id>https://www.chaierss.top/posts/c5196243.html</id>
    <published>2024-09-30T07:40:36.397Z</published>
    <updated>2022-12-01T06:07:38.389Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title=" 前言 "></a><font color="#798ba9"> 前言 </font></h2><p>python3 cv2安装失败</p><span id="more"></span><h2 id="解决办法"><a href="#解决办法" class="headerlink" title=" 解决办法 "></a><font color="#798ba9"> 解决办法 </font></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install cv2</span><br></pre></td></tr></table></figure><p>改成<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install opencv-python</span><br></pre></td></tr></table></figure></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot; 前言 &quot;&gt;&lt;/a&gt;&lt;font color=&quot;#798ba9&quot;&gt; 前言 &lt;/font&gt;&lt;/h2&gt;&lt;p&gt;python3 cv2安装失败&lt;/p&gt;</summary>
    
    
    
    <category term="经验" scheme="https://www.chaierss.top/categories/%E7%BB%8F%E9%AA%8C/"/>
    
    
    <category term="python" scheme="https://www.chaierss.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>ORACLE组合条件实例</title>
    <link href="https://www.chaierss.top/posts/58475bac.html"/>
    <id>https://www.chaierss.top/posts/58475bac.html</id>
    <published>2024-09-30T07:40:36.331Z</published>
    <updated>2022-12-01T06:07:38.348Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title=" 前言 "></a><font color="#798ba9"> 前言 </font></h2><p>在日常工作中，客户提出了某些需求，如何运用组合条件满足这些需求呢？</p><span id="more"></span><h2 id="1-需求分析"><a href="#1-需求分析" class="headerlink" title=" 1.需求分析 "></a><font color="#798ba9"> 1.需求分析 </font></h2><p>客户需求如下：一个担保合同对应多个担保物时，只需要保留一个，手工调整太累了，能不能改成自动。</p><p>需求分析如下：</p><blockquote><p>一个担保合同对应多个担保物时，条件筛选只保留一个担保金额</p></blockquote><p>显而易见的，1:N的情况下造成N条数据，即多个担保物共享一个担保金额。</p><p><br></p><h2 id="2-思路想法"><a href="#2-思路想法" class="headerlink" title=" 2.思路想法 "></a><font color="#798ba9"> 2.思路想法 </font></h2><p>不是重复数据的问题，采用UPDATE更新。根据需求分析确定思路如下。</p><blockquote><p>1.先找出一个担保合同对应多个担保物的担保<br>2.确定保留哪一个（客户沟通，保留一个最早的）</p></blockquote><p><br></p><h2 id="3-明细实现"><a href="#3-明细实现" class="headerlink" title=" 3.明细实现 "></a><font color="#798ba9"> 3.明细实现 </font></h2><p>思路明确之后就是具体实现。</p><h2 id="1-先找出一个担保合同对应多个担保物的担保"><a href="#1-先找出一个担保合同对应多个担保物的担保" class="headerlink" title="1.先找出一个担保合同对应多个担保物的担保"></a>1.先找出一个担保合同对应多个担保物的担保</h2><p>一个简单的分组后筛选</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT 担保合同编号 FROM 担保合同信息表 GROUP BY 担保合同编号 HAVING COUNT(*) &gt; 1</span><br></pre></td></tr></table></figure><h2 id="2-确定保留哪一个（客户沟通，保留一个最早的）"><a href="#2-确定保留哪一个（客户沟通，保留一个最早的）" class="headerlink" title="2.确定保留哪一个（客户沟通，保留一个最早的）"></a>2.确定保留哪一个（客户沟通，保留一个最早的）</h2><p>最早运用MIN()函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT MIN(担保合同编号) </span><br><span class="line">FROM 担保合同信息表</span><br><span class="line">WHERE 担保合同编号 IN</span><br><span class="line">(SELECT 担保合同编号 FROM 担保合同信息表 GROUP BY 担保合同编号 HAVING COUNT(*) &gt; 1)</span><br></pre></td></tr></table></figure><h2 id="3-组合条件UPDATE更新"><a href="#3-组合条件UPDATE更新" class="headerlink" title="3.组合条件UPDATE更新"></a>3.组合条件UPDATE更新</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">UPDATE 目标表</span><br><span class="line">SET 目标表担保合同金额 = 0</span><br><span class="line"></span><br><span class="line">WHERE 担保合同编号 IN </span><br><span class="line">(SELECT 担保合同编号 FROM 担保合同信息表 GROUP BY 担保合同编号 HAVING COUNT(*) &gt; 1)</span><br><span class="line"></span><br><span class="line">AND 担保合同编号 NOT IN </span><br><span class="line">(SELECT MIN(担保合同编号) </span><br><span class="line">FROM 担保合同信息表</span><br><span class="line">WHERE 担保合同编号 IN</span><br><span class="line">(SELECT 担保合同编号 FROM 担保合同信息表 GROUP BY 担保合同编号 HAVING COUNT(*) &gt; 1));</span><br></pre></td></tr></table></figure><p><br></p><h2 id="4-调整完善"><a href="#4-调整完善" class="headerlink" title=" 4.调整完善 "></a><font color="#798ba9"> 4.调整完善 </font></h2><p>当然要考虑到语句的运行效率优化，关于sql优化—in和exists效率问题，笔者建议另作一篇文章讨论，此处引用优化结论：</p><blockquote><p>如果查询的两个表大小相当，那么用in 和exists 差别不大。<br>如果两个表中一个较小，一个是大表，则子查询表大的用exists，子查询表小的用in</p></blockquote><p>优化后语句如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">UPDATE 目标表 A</span><br><span class="line">SET A.目标表担保合同金额 = 0</span><br><span class="line"></span><br><span class="line">WHERE EXISTS(</span><br><span class="line">SELECT B.担保合同编号 </span><br><span class="line">FROM 担保合同信息表 B </span><br><span class="line">WHERE A.担保合同编号 = B.担保合同编号 </span><br><span class="line">GROUP BY B.担保合同编号)</span><br><span class="line"></span><br><span class="line">AND NOT EXISTS(</span><br><span class="line">SELECT MIN(C.担保合同编号) </span><br><span class="line">FROM 担保合同信息表 C</span><br><span class="line">WHERE EXISTS(</span><br><span class="line">SELECT B.担保合同编号 </span><br><span class="line">FROM 担保合同信息表 B </span><br><span class="line">WHERE C.担保合同编号 = B.担保合同编号 </span><br><span class="line">GROUP BY B.担保合同编号)</span><br><span class="line">AND A.担保合同编号 = C.担保合同编号);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot; 前言 &quot;&gt;&lt;/a&gt;&lt;font color=&quot;#798ba9&quot;&gt; 前言 &lt;/font&gt;&lt;/h2&gt;&lt;p&gt;在日常工作中，客户提出了某些需求，如何运用组合条件满足这些需求呢？&lt;/p&gt;</summary>
    
    
    
    <category term="实战" scheme="https://www.chaierss.top/categories/%E5%AE%9E%E6%88%98/"/>
    
    
    <category term="Oracle" scheme="https://www.chaierss.top/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>Linux操作系统概述</title>
    <link href="https://www.chaierss.top/posts/f24bb437.html"/>
    <id>https://www.chaierss.top/posts/f24bb437.html</id>
    <published>2024-09-30T07:40:36.245Z</published>
    <updated>2022-12-01T06:07:38.382Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title=" 前言 "></a><font color="#798ba9"> 前言 </font></h2><p>Linux操作系统学习笔记</p><span id="more"></span><h2 id="一、操作系统概念与分类"><a href="#一、操作系统概念与分类" class="headerlink" title=" 一、操作系统概念与分类 "></a><font color="#798ba9"> 一、操作系统概念与分类 </font></h2><h2 id="操作系统概念"><a href="#操作系统概念" class="headerlink" title="操作系统概念"></a>操作系统概念</h2><blockquote><p>操作系统（Operating System，简称OS）是<font color="green">管理计算机硬件与软件资源</font>的程序，需要处理如：管理与配置内存、决定系统资源供需的优先次序、控制输入设备与输出设备、操作网络与管理文件系统等基本事务；<br>没有操作系统的机器称之为<font color="red">裸机</font>，不管是开发还是使用都十分不便；<br>操作系统也提供一个让<font color="green">用户与系统交互的操作界面</font>；</p></blockquote><h2 id="操作系统分类"><a href="#操作系统分类" class="headerlink" title="操作系统分类"></a>操作系统分类</h2><p>操作系统发展至今，种类繁多，可以根据应用的不同领域进行划分；</p><blockquote><p>桌面操作系统<br>服务器操作系统<br>嵌入式操作系统<br>移动设备操作系统</p></blockquote><h3 id="桌面操作系统"><a href="#桌面操作系统" class="headerlink" title="桌面操作系统"></a>桌面操作系统</h3><blockquote><p>Mac OS（Apple）、Windows（Microsoft）、Linux三足鼎立</p></blockquote><h3 id="嵌入式操作系统"><a href="#嵌入式操作系统" class="headerlink" title="嵌入式操作系统"></a>嵌入式操作系统</h3><font color="red">嵌入式操作系统</font>：是一种完全嵌入受控器件内部，为特定应用而设计的专用计算机系统；> 如uClinux（嵌入式Linux）、WinCE（微软嵌入式、移动计算平台）、PTOS（嵌入式实时操作系统，军事航空领域）等；> 在工业、军事、航空等领域使用较多；### 服务器操作系统<font color="red">服务器操作系统</font>：一般指的是安装在大型计算机上的操作系统。比如Web服务器、应用服务器和数据库服务器等，是企业IT系统的基础架构平台。> 主要分为四大流派：Unix、<font color="red">Linux、Windows Server</font>和Netware；### 移动设备操作系统<font color="red">移动设备操作系统</font>：主要应用在智能手机、平板等智能设备上。> 主要有Android（谷歌）、ios（苹果）、Symbian（诺基亚）、BlackBerry OS（黑莓）、Windows Mobile（微软）、Harmony（华为鸿蒙）等。<br>## <font color="#798ba9"> 二、Linux起源与发展 </font><blockquote><p>Unix系统是较早被广泛使用的计算机操作系统之一，由Ken Thompson在AT&amp;T贝尔实验室实现，后续发展中，因开源、版权等问题陷入不断纠纷，衍生出不同Unix版本；<br>1991年芬兰学生Linus Torvalds发布Linux系统第一个版本，遵循GPL协议（通用公共许可证），开源免费；<br>Linux是一个类似Unix的操作系统，Linux的初衷就是要替代Unix，并在功能和用户体验上进行优化，所以Linux模仿了Unix（但并没有抄袭Unix的源码），使得Linux在外观和交互上与Unix非常类似；</p></blockquote><p><br></p><h2 id="三、Linux内核与发行版本"><a href="#三、Linux内核与发行版本" class="headerlink" title=" 三、Linux内核与发行版本 "></a><font color="#798ba9"> 三、Linux内核与发行版本 </font></h2><h2 id="Linux内核（Kernel）"><a href="#Linux内核（Kernel）" class="headerlink" title="Linux内核（Kernel）"></a>Linux内核（Kernel）</h2><blockquote><p><font color="red">操作系统的核心部分简称内核</font>，Linux第一版本独立内核由Linus Torvalds开发实现，约10000行代码；<br>后续Linus Torvalds公开了Linux内核代码，并邀请他人一起完善Linux；现在只有2%的Linux核心代码是由Linus Torvalds自己编写，但是仍然拥有Linux内核且保留了选择新代码和需要合并的新方法的<font color="red">最终裁定权</font>；</p><p><font color="green">Linux操作系统=Linux + Gun软件及系统软件 + 必要的应用程序</font><br>Linux选择企鹅图案作为Logo，其含义是：开发源代码的Linux像企鹅一样为全人类共同所有；</p></blockquote><h2 id="Linux发行版本"><a href="#Linux发行版本" class="headerlink" title="Linux发行版本"></a>Linux发行版本</h2><blockquote><p>Linxu发行版就是由Linux内核与各种常用软件的集合产品，如今全球大约有数百款的Linux发行版本；<br>从大的方面来说，Linux发行版可大致分为<font color="red">个人桌面版</font>和<font color="red">企业服务器版</font>；<br>个人桌面版中，Ubuntu成熟度颇高较受欢迎，而<font color="green">Redhat（红帽系列）</font>及其延申版本<font color="green">（Centos）</font>凭借稳定的性能在企业服务器中占比很大。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot; 前言 &quot;&gt;&lt;/a&gt;&lt;font color=&quot;#798ba9&quot;&gt; 前言 &lt;/font&gt;&lt;/h2&gt;&lt;p&gt;Linux操作系统学习笔记&lt;/p&gt;</summary>
    
    
    
    <category term="知识点" scheme="https://www.chaierss.top/categories/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
    <category term="Linux" scheme="https://www.chaierss.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux安全防护（一）</title>
    <link href="https://www.chaierss.top/posts/d0656d0a.html"/>
    <id>https://www.chaierss.top/posts/d0656d0a.html</id>
    <published>2024-09-30T07:40:36.177Z</published>
    <updated>2023-03-16T03:10:44.418Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title=" 前言 "></a><font color="#798ba9"> 前言 </font></h1><p>Linux安全防护初级篇</p><span id="more"></span><h1 id="一、配置密钥登录"><a href="#一、配置密钥登录" class="headerlink" title=" 一、配置密钥登录 "></a><font color="#798ba9"> 一、配置密钥登录 </font></h1><h2 id="1-制作密钥对"><a href="#1-制作密钥对" class="headerlink" title="1. 制作密钥对"></a><a id="demo"><font color="#798ba9">1. 制作密钥对</font></a></h2><blockquote><p>root用户登录服务器后 输入以下命令 制作密钥对</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure><p>类似配置一个门锁 和 钥匙对</p><p><img src="https://chaierss-pictures-1301320473.cos.ap-chengdu.myqcloud.com/img/1665989584565.jpg" alt=""></p><p>就可以创建一个不加密的密钥对（ps:如果需要添加密码 可以在提示处输入密码 如下：）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase (empty for no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br></pre></td></tr></table></figure><h2 id="2-服务器安装公钥"><a href="#2-服务器安装公钥" class="headerlink" title="2. 服务器安装公钥"></a><font color="#798ba9">2. 服务器安装公钥</font></h2><p>生成了密钥对后，进入密钥对保存路径 安装公钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /root/.ssh</span><br><span class="line">cat id_rsa.pub &gt;&gt; authorized_keys</span><br><span class="line">chmod 600 authorized_keys</span><br></pre></td></tr></table></figure><p style="text-align:center;color: orange;">注意：下载 id_rsa 私钥文件到本地 这是连接服务器的钥匙</p><h2 id="3-配置SSH"><a href="#3-配置SSH" class="headerlink" title="3. 配置SSH"></a><font color="#798ba9">3. 配置SSH</font></h2><p>公钥安装好了之后 配置SSH文件开打密钥登录</p><p>修改 /etc/ssh/sshd_config 文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p><img src="https://chaierss-pictures-1301320473.cos.ap-chengdu.myqcloud.com/img/1665990182319.jpg" alt=""></p><p>添加或修改如下配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">RSAAuthentication yes</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line"></span><br><span class="line">PermitRootLogin yes</span><br><span class="line"></span><br><span class="line">PasswordAuthentication no</span><br></pre></td></tr></table></figure><p>然后，重启SSH 服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service sshd restart</span><br></pre></td></tr></table></figure><h2 id="4-使用密钥连接"><a href="#4-使用密钥连接" class="headerlink" title="4. 使用密钥连接"></a><font color="#798ba9">4. 使用密钥连接</font></h2><p>ok 禁用密码登录后就会显示认证失败了</p><p><img src="https://chaierss-pictures-1301320473.cos.ap-chengdu.myqcloud.com/img/1665990952406.jpg" alt=""></p><p>在SSH软件中配置密钥 图中显示的密码 就是之前<a href="#demo">创建密钥对时是否输入的密码</a></p><p><img src="https://chaierss-pictures-1301320473.cos.ap-chengdu.myqcloud.com/img/1665991124830.jpg" alt=""></p><p>连接配置中选择公钥方式 即可连接成功</p><p><img src="https://chaierss-pictures-1301320473.cos.ap-chengdu.myqcloud.com/img/1665991404950.jpg" alt=""></p><p><img src="https://chaierss-pictures-1301320473.cos.ap-chengdu.myqcloud.com/img/1665991535045.jpg" alt=""></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot; 前言 &quot;&gt;&lt;/a&gt;&lt;font color=&quot;#798ba9&quot;&gt; 前言 &lt;/font&gt;&lt;/h1&gt;&lt;p&gt;Linux安全防护初级篇&lt;/p&gt;</summary>
    
    
    
    <category term="安全防护" scheme="https://www.chaierss.top/categories/%E5%AE%89%E5%85%A8%E9%98%B2%E6%8A%A4/"/>
    
    
    <category term="Linux" scheme="https://www.chaierss.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Doris性能测试报告</title>
    <link href="https://www.chaierss.top/posts/ed202b4f.html"/>
    <id>https://www.chaierss.top/posts/ed202b4f.html</id>
    <published>2024-09-30T07:40:35.993Z</published>
    <updated>2024-10-10T01:28:39.647Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title=" 前言 "></a><font color="#798ba9"> 前言 </font></h1><p>Doris性能测试报告</p><span id="more"></span><h1 id="一、Doris介绍"><a href="#一、Doris介绍" class="headerlink" title=" 一、Doris介绍 "></a><font color="#798ba9"> 一、Doris介绍 </font></h1><p>实时分析型数据库Apache Doris，几乎国内的一二线大厂都在使用它做数据分析</p><p><img src="img.png" alt="img.png"></p><p>官方地址：<a href="https://doris.apache.org/">https://doris.apache.org/</a></p><p>Apache Doris源于百度2008年启动的产品Palo在2018年捐献给Apache基金会，是一个基于 MPP 架构的高性能、实时的分析型数据库，他非常简单易用，而且性能还不错，仅需亚秒级响应时间即可获得查询结果，不仅支持高并发的查询场景，也可以支持高吞吐的复杂分析场景，比如你可以基于它做用户行为分析、日志检索平台、用户画像分析、订单分析等应用。<br>Doris的架构非常简洁，易于运维，并且可以支持10PB以上的超大数据集</p><h2 id="1-Doris特性"><a href="#1-Doris特性" class="headerlink" title="1. Doris特性"></a><font color="#798ba9">1. Doris特性</font></h2><p><img src="img_1.png" alt="img_1.png"></p><p>这里特性很多，但是如果没接触过大数据的同学，可能不是特别了解，但是注意这个特性，支持SQL 语言，兼容MySQL，比如：通过Mybatis 写好 sql，就可以调用查询，而且他能支持亿级数据检索响应，以前还是想分库分表呢，现在有了它可以在考虑一下它了，看分库分表有必要吗，但是这里要注意下，它是一个 OLAP 引擎与 OLTP还是有点区别，如果业务场景，新增多后期更新少，同时查询场景多，那么可以在 mysql 中保存一段时间的热点数据，来进行相关业务操作，而报表查询都走Doris<br>这里可能有些人员不懂什么是 OLAP，下面是一个OLAP与OLTP对比图</p><p><img src="img_2.png" alt="img_2.png"></p><h2 id="2-Doris架构"><a href="#2-Doris架构" class="headerlink" title="2. Doris架构"></a><font color="#798ba9">2. Doris架构</font></h2><p>Doirs只有两个主进程模块。一个是 Frontend（FE），另一个是Backend（BE）</p><p><img src="img_3.png" alt="img_3.png"></p><h3 id="2-1-Frontend（FE）"><a href="#2-1-Frontend（FE）" class="headerlink" title="2.1 Frontend（FE）"></a><font color="#798ba9">2.1 Frontend（FE）</font></h3><p>主要负责用户请求的接入、查询计划的解析、元数据的存储和集群管理相关工作， Doris采用Paxos协议以及Memory + Checkpoint + Journal的机制来确保元数据的高性能及高可靠。</p><p><img src="img_4.png" alt="img_4.png"></p><p>Leader、follower和 observer它们三个构成一个可靠的服务，保证单节点宕机的情况下，元数据能够实时地在线恢复，而不影响整个服务，与zookeeper角色一样。</p><h3 id="2-2-Backend（BE）"><a href="#2-2-Backend（BE）" class="headerlink" title="2.2 Backend（BE）"></a><font color="#798ba9">2.2 Backend（BE）</font></h3><p>BE主要负责数据存储、查询计划的执行。</p><blockquote><ul><li>BE管理tablet副本, tablet是table经过分区分桶形成的子表, 采用列式存储。</li><li>BE受FE指导, 创建或删除子表。</li><li>BE接收FE分发的物理执行计划与其他BE共同协作完成执行。</li><li>BE读本地的列存储引擎, 获取数据, 通过索引和谓词下沉快速过滤数据。</li><li>BE后台执行compact任务, 减少查询时的读放大。<br>以上FE和 BE支持动态弹性扩容，而且在扩容过程中对应用无影响，同时Doris 不依赖zk、hdfs等，所以架构很简单，这种架构设计极大的简化了运维成本，其实一个好的产品就应该这样，把复杂留给自己，把简单留给用户</li></ul></blockquote><h1 id="二、OLAP对比"><a href="#二、OLAP对比" class="headerlink" title=" 二、OLAP对比 "></a><font color="#798ba9"> 二、OLAP对比 </font></h1><p>在我们解决大数据查询分析时，也调研了比较知名的一些产品，下面是一个对比<br><img src="img_5.png" alt="img_5.png"></p><h2 id="1-ClickHouse"><a href="#1-ClickHouse" class="headerlink" title="1. ClickHouse"></a><font color="#798ba9">1. ClickHouse</font></h2><p>提到 Doris 不得不提ClickHouse，CK是由俄罗斯IT公司Yandex为Yandex.Metrica网络分析服务开发的开发的实时数仓，以性能著称，但是经过测试，与 Doris在不同场景各有优劣， 但是它的架构复杂、运维成本高，同时对 sql 语法兼容性没有Doris好，因此没有选择，不过国内也有不少公司在使用</p><h2 id="2-Doris"><a href="#2-Doris" class="headerlink" title="2. Doris"></a><font color="#798ba9">2. Doris</font></h2><p>运维成本低、兼容Mysql 语法、架构足够简单、社区支持性好（非常活跃），同时经过百度内部长达10 多年的大规模使用，成熟度不容置疑，没有理由不选它</p><h1 id="三、性能测试"><a href="#三、性能测试" class="headerlink" title=" 三、性能测试 "></a><font color="#798ba9"> 三、性能测试 </font></h1><p>Doris Version：doris-2.1.5-rc02</p><blockquote><ul><li>3 FE + 3 BE + 3Broker集群部署</li><li>CPU：Intel(R) Xeon(R) CPU E5-2650 v2 @ 2.60GHz 2 physical CPU package(s) 16 physical CPU core(s) 32 logical CPU(s)</li><li>内存：128GB</li><li>硬盘：2.8T机械硬盘</li><li>网卡：千兆网卡</li></ul></blockquote><h2 id="1-单节点单表测试"><a href="#1-单节点单表测试" class="headerlink" title="1. 单节点单表测试"></a><font color="#798ba9">1. 单节点单表测试</font></h2><p>单表话单数据准备如下</p><div class="table-container"><table><thead><tr><th style="text-align:left">话单分区</th><th style="text-align:left">数据量</th><th style="text-align:left">物理数据量</th><th style="text-align:left">存储数据量(单备份)</th></tr></thead><tbody><tr><td style="text-align:left">2024-09-02</td><td style="text-align:left">32887605</td><td style="text-align:left">7.5 GB</td><td style="text-align:left">1.898 GB</td></tr><tr><td style="text-align:left">2024-09-03</td><td style="text-align:left">31884513</td><td style="text-align:left">7.3 GB</td><td style="text-align:left">1.833 GB</td></tr><tr><td style="text-align:left">2024-09-04</td><td style="text-align:left">30990812</td><td style="text-align:left">7.1 GB</td><td style="text-align:left">1.799 GB</td></tr><tr><td style="text-align:left">2024-09-05</td><td style="text-align:left">31736650</td><td style="text-align:left">7.2 GB</td><td style="text-align:left">1.843 GB</td></tr><tr><td style="text-align:left">2024-09-06</td><td style="text-align:left">33726540</td><td style="text-align:left">7.7 GB</td><td style="text-align:left">2.031 GB</td></tr><tr><td style="text-align:left">2024-09-07</td><td style="text-align:left">42865361</td><td style="text-align:left">9.9 GB</td><td style="text-align:left">2.745 GB</td></tr><tr><td style="text-align:left">2024-09-08</td><td style="text-align:left">41825321</td><td style="text-align:left">9.6 GB</td><td style="text-align:left">2.728 GB</td></tr></tbody></table></div><p>单表执行语句如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">sum( a.sum_time / 3600 / 7 ) AS sum_view_time,</span><br><span class="line">count( loginaccount ) AS sum_view_cnt,</span><br><span class="line">sum( a.sum_time / 3600 / 7 )/ count( loginaccount ) AS rhj_view_time </span><br><span class="line">FROM</span><br><span class="line">(</span><br><span class="line">SELECT</span><br><span class="line">userid AS loginaccount,</span><br><span class="line">sum( CASE WHEN view_time &gt; 18000 THEN 18000 ELSE view_time END ) AS sum_time </span><br><span class="line">FROM</span><br><span class="line">(</span><br><span class="line">SELECT</span><br><span class="line">userid,</span><br><span class="line">servicetype,</span><br><span class="line">categoryid,</span><br><span class="line">contentid,</span><br><span class="line">CASE</span><br><span class="line"></span><br><span class="line">WHEN categoryid NOT IN ( &#x27;11BANN99999999211025000214149171&#x27;, &#x27;11BANN99999999211103000214327725&#x27;, &#x27;catec120160122805183000000012432&#x27;, &#x27;catec120131030758725000000008278&#x27;, &#x27;catec120131030534835000000008277&#x27;, &#x27;catec120150805425627000000011883&#x27;, &#x27;catec120161229342425000000014611&#x27;, &#x27;11BANN99999999210517000211324269&#x27;, &#x27;catec120160408420390000000013495&#x27;, &#x27;catec120181218783900000000019245&#x27;, &#x27;catec120200212756518000000020653&#x27;, &#x27;11BANN99999999211025000214149171&#x27;, &#x27;11BANN99999999211103000214327725&#x27; ) THEN</span><br><span class="line">unix_timestamp( endtime, &#x27;%Y%m%d%H%i%s&#x27; )- unix_timestamp( starttime, &#x27;%Y%m%d%H%i%s&#x27; ) ELSE 0 </span><br><span class="line">END AS view_time </span><br><span class="line">FROM</span><br><span class="line">c3_user_contentview </span><br><span class="line">WHERE</span><br><span class="line">datelabel BETWEEN &#x27;20240902&#x27; </span><br><span class="line">AND &#x27;20240908&#x27; </span><br><span class="line">AND endreason != &#x27;2&#x27; </span><br><span class="line">AND categoryid NOT IN ( &#x27;11BANN99999999211025000214149171&#x27;, &#x27;11BANN99999999211103000214327725&#x27;, &#x27;catec120160122805183000000012432&#x27;, &#x27;catec120131030758725000000008278&#x27;, &#x27;catec120131030534835000000008277&#x27;, &#x27;catec120150805425627000000011883&#x27;, &#x27;catec120161229342425000000014611&#x27;, &#x27;11BANN99999999210517000211324269&#x27;, &#x27;catec120160408420390000000013495&#x27;, &#x27;catec120181218783900000000019245&#x27;, &#x27;catec120200212756518000000020653&#x27;, &#x27;11BANN99999999211025000214149171&#x27;, &#x27;11BANN99999999211103000214327725&#x27; ) </span><br><span class="line">) main </span><br><span class="line">GROUP BY</span><br><span class="line">userid </span><br><span class="line">) a;</span><br></pre></td></tr></table></figure><p>2亿4千万的数据量下，doris执行耗时8.94秒</p><p><img src="img_6.png" alt="img_6.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">sum( a.sum_time / 3600 / 7 ) AS sum_view_time,</span><br><span class="line">count( loginaccount ) AS sum_view_cnt,</span><br><span class="line">sum( a.sum_time / 3600 / 7 )/ count( loginaccount ) AS rhj_view_time </span><br><span class="line">FROM</span><br><span class="line">(</span><br><span class="line">SELECT</span><br><span class="line">userid AS loginaccount,</span><br><span class="line">sum( CASE WHEN view_time &gt; 18000 THEN 18000 ELSE view_time END ) AS sum_time </span><br><span class="line">FROM</span><br><span class="line">(</span><br><span class="line">SELECT</span><br><span class="line">userid,</span><br><span class="line">servicetype,</span><br><span class="line">categoryid,</span><br><span class="line">contentid,</span><br><span class="line">CASE</span><br><span class="line">WHEN categoryid NOT IN ( &#x27;11BANN99999999211025000214149171&#x27;, &#x27;11BANN99999999211103000214327725&#x27;, &#x27;catec120160122805183000000012432&#x27;, &#x27;catec120131030758725000000008278&#x27;, &#x27;catec120131030534835000000008277&#x27;, &#x27;catec120150805425627000000011883&#x27;, &#x27;catec120161229342425000000014611&#x27;, &#x27;11BANN99999999210517000211324269&#x27;, &#x27;catec120160408420390000000013495&#x27;, &#x27;catec120181218783900000000019245&#x27;, &#x27;catec120200212756518000000020653&#x27;, &#x27;11BANN99999999211025000214149171&#x27;, &#x27;11BANN99999999211103000214327725&#x27; ) THEN</span><br><span class="line">unix_timestamp( endtime, &#x27;yyyyMMddHHmmss&#x27; )- unix_timestamp( starttime, &#x27;yyyyMMddHHmmss&#x27; ) ELSE 0 </span><br><span class="line">END AS view_time </span><br><span class="line">FROM</span><br><span class="line">c3_user_contentview </span><br><span class="line">WHERE</span><br><span class="line">datelabel BETWEEN &#x27;20240902&#x27; </span><br><span class="line">AND &#x27;20240908&#x27; </span><br><span class="line">AND endreason != &#x27;2&#x27; </span><br><span class="line">AND categoryid NOT IN ( &#x27;11BANN99999999211025000214149171&#x27;, &#x27;11BANN99999999211103000214327725&#x27;, &#x27;catec120160122805183000000012432&#x27;, &#x27;catec120131030758725000000008278&#x27;, &#x27;catec120131030534835000000008277&#x27;, &#x27;catec120150805425627000000011883&#x27;, &#x27;catec120161229342425000000014611&#x27;, &#x27;11BANN99999999210517000211324269&#x27;, &#x27;catec120160408420390000000013495&#x27;, &#x27;catec120181218783900000000019245&#x27;, &#x27;catec120200212756518000000020653&#x27;, &#x27;11BANN99999999211025000214149171&#x27;, &#x27;11BANN99999999211103000214327725&#x27; ) </span><br><span class="line">) main </span><br><span class="line">GROUP BY</span><br><span class="line">userid </span><br><span class="line">) a;</span><br></pre></td></tr></table></figure><p>hive执行耗时75.778秒</p><p><img src="img_7.png" alt="img_7.png"></p><h2 id="2-单节点多表关联测试"><a href="#2-单节点多表关联测试" class="headerlink" title="2. 单节点多表关联测试"></a><font color="#798ba9">2. 单节点多表关联测试</font></h2><p>运维成本低、兼容Mysql 语法、架构足够简单、社区支持性好（非常活跃），同时经过百度内部长达10 多年的大规模使用，成熟度不容置疑，没有理由不选它</p><h2 id="1-测试3"><a href="#1-测试3" class="headerlink" title="1. 测试3"></a><font color="#798ba9">1. 测试3</font></h2><h2 id="1-测试4"><a href="#1-测试4" class="headerlink" title="1. 测试4"></a><font color="#798ba9">1. 测试4</font></h2><h2 id="1-测试5"><a href="#1-测试5" class="headerlink" title="1. 测试5"></a><font color="#798ba9">1. 测试5</font></h2><h2 id="1-测试6"><a href="#1-测试6" class="headerlink" title="1. 测试6"></a><font color="#798ba9">1. 测试6</font></h2>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot; 前言 &quot;&gt;&lt;/a&gt;&lt;font color=&quot;#798ba9&quot;&gt; 前言 &lt;/font&gt;&lt;/h1&gt;&lt;p&gt;Doris性能测试报告&lt;/p&gt;</summary>
    
    
    
    <category term="性能测试" scheme="https://www.chaierss.top/categories/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="Doris" scheme="https://www.chaierss.top/tags/Doris/"/>
    
  </entry>
  
</feed>
